// Import React and Component
import React, { Component, useEffect, useState, useCallback, useContext } from "react";
import "react-native-gesture-handler";
import { StyleSheet, TextInput, Alert, View, Text, Modal, ActivityIndicator, Image, KeyboardAvoidingView, Keyboard, TouchableOpacity, ScrollView } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import axios from 'axios';
import { StatusBar } from 'react-native';
import Svg, { Path, Rect, Defs, LinearGradient, RadialGradient, Stop, ClipPath, Pattern, Mask } from 'react-native-svg';
// Import React
import { Avatar, Overlay, Button } from 'react-native-elements';
import "react-native-gesture-handler";
// Import Navigators from React Navigation
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import { createDrawerNavigator } from '@react-navigation/drawer';

import { LogBox } from 'react-native';
LogBox.ignoreLogs(['Warning: ...']); // Ignore log notification by message
LogBox.ignoreAllLogs();//Ignore all log notifications
// Import Screens
import SplashScreen from "./src/SetupScreens/Splash";
import LoginScreen from "./src/SetupScreens/Login";
import RegistrationNavigator from "./src/SetupScreens/RegistrationNavigator";
import TabNavigator from "./src/Tabs/Navigation/TabNavigator";




// Import Screens
// profile
import ProfileScreen from './src/Tabs/Profile/SidebarDrawerTabs/Profile_Pages/ProfileScreen';
import EditProfileScreen from './src/Tabs/Profile/SidebarDrawerTabs/Profile_Pages/EditProfileScreen';

// settings
import Settings from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/Settings';
import TermsAndConditions from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/TermsAndConditions';
import AboutUs from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/AboutUs';
import PrivacyPolicy from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/PrivacyPolicy';
import Themes from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/Themes';
import AccountSettings from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/AccountSettings';
import Location from './src/Tabs/Profile/SidebarDrawerTabs/Settings_Pages/Location';



// friends
// Import Components
import FriendCard from './src/Tabs/Profile/SidebarDrawerTabs/Friends_Pages/FriendCard';
import FriendsView from './src/Tabs/Profile/SidebarDrawerTabs/Friends_Pages/FriendsView';
import FriendsProfile from './src/Tabs/Profile/SidebarDrawerTabs/Friends_Pages/FriendsProfile';
import RequestProfile from './src/Tabs/Profile/SidebarDrawerTabs/Friends_Pages/RequestProfile';

import FriendsSegmentedController from './src/Tabs/Profile/SidebarDrawerTabs/Friends_Pages/FriendsSegmentedController';

// interests
import Interests from './src/Tabs/Profile/SidebarDrawerTabs/Interests_Pages/Interests';

// notifications
import Notifications from './src/Tabs/Profile/SidebarDrawerTabs/Notifications_Pages/Notifications';

// navigation
import CustomSidebarMenu from "./src/Tabs/Navigation/CustomSidebarMenu";
import NavigationDrawerHeader from "./src/Tabs/Navigation/NavigationDrawerHeader";
import ProfileNavigationDrawerHeader from "./src/Tabs/Navigation/ProfileNavigationDrawerHeader";


import { ThemeProvider, ThemeContext} from './src/Contexts/theme-context';



// !!!! VARIABLE TO CHANGE IP ADDRESS !!!! //

const ip_address = "10.0.0.110:3000";

// !!!! VARIABLE TO CHANGE IP ADDRESS !!!! //


const Stack = createStackNavigator();
const Drawer = createDrawerNavigator();



const Auth = () => {
  const { dark, sport, theme, toggle, sportToggle, setSport} = useContext(ThemeContext);
  StatusBar.setBarStyle(theme.barColor, true);
  // Stack Navigator for Login and Sign up Screen
  return (
    <Stack.Navigator initialRouteName="LoginScreen">
      <Stack.Screen
        name="LoginScreen"
        component={LoginScreen}
        options={{ headerShown: false}}
      />
      <Stack.Screen
        name="RegistrationNavigator"
        component={RegistrationNavigator}
        options={{ headerShown: false}}
      />
    </Stack.Navigator>
  );
};

const interestsScreenStack = ({navigation, props}) => {
  return (
    <Stack.Navigator initialRouteName="Interests">
      <Stack.Screen
        name="Interests"
        component={Interests}
    options={{
          headerShown: false,
        }}
      />
    </Stack.Navigator>
  );
};

const friendsScreenStack = ({navigation, props}) => {
  return (
    <Stack.Navigator initialRouteName="FriendsNavigator">
       <Stack.Screen
        name="FriendsSegmentedController"
        component={FriendsSegmentedController}
        options={{
          headerShown: false,
        }}
      />
      <Stack.Screen name = "FriendsProfile" component={FriendsProfile} options={{
          headerShown: false,
        }} />
              <Stack.Screen name = "RequestProfile" component={RequestProfile} options={{
          headerShown: false,
        }} />

    </Stack.Navigator>
  );
};


const notificationScreenStack = ({navigation, props}) => {
  return (
    <Stack.Navigator initialRouteName="Notifications">
      <Stack.Screen
        name="Notifications"
        component={Notifications}
        options={{
          headerShown: false,
        }}
      />
    </Stack.Navigator>
  );
};


const settingScreenStack = ({navigation}) => {
  return (
    <Stack.Navigator
      screenOptions={{
        headerShown:false,
        headerLeft: () => (
          <NavigationDrawerHeader navigationProps={navigation} />
        ),
            headerStyle: {
            height: 120,
            shadowColor: 'transparent',
          },
          headerTitleStyle: {
            fontSize: 32,
            fontWeight: '700',
          },
      }}>
      <Stack.Screen
        name="Settings"
        component={Settings}
        options={{
          title: 'Settings', //Set Header Title
        }}
      />
      <Stack.Screen
        name="TermsAndConditions"
        component={TermsAndConditions}
        options={{
          title: "TermsAndConditions", //Set Header Title
          headerShown: false,
          headerTitleStyle: {
            fontWeight: "bold", //Set Header text style
            fontSize: 20
          }
        }}
      />
      <Stack.Screen
        name="Location"
        component={Location}
        options={{
          headerShown: false,
        }}
      />
      <Stack.Screen
        name="AboutUs"
        component={AboutUs}
        options={{
          title: "AboutUs", //Set Header Title
          headerShown: false,
          headerTitleStyle: {
            fontWeight: "bold", //Set Header text style
            fontSize: 20
          }
        }}
      />
      <Stack.Screen
        name="PrivacyPolicy"
        component={PrivacyPolicy}
        options={{
          title: "PrivacyPolicy", //Set Header Title
          headerShown: false,
          headerTitleStyle: {
            fontWeight: "bold", //Set Header text style
            fontSize: 20
          }
        }}
      />
      <Stack.Screen
        name="AccountSettings"
        component={AccountSettings}
        options={{
          title: "AccountSettings", //Set Header Title
          headerShown: false,
          headerTitleStyle: {
            fontWeight: "bold", //Set Header text style
            fontSize: 20
          }
        }}
      />
      <Stack.Screen
        name="Themes"
        component={Themes}
        options={{
          title: 'Themes', //Set Header Title
          headerShown: false
        }}
      />
    </Stack.Navigator>
  );
};


const drawerRoot = ({navigation}) => {
  const [fName, setFname] = useState('');
  const [lName, setLname] = useState('');

    useEffect(() => {
      AsyncStorage.getItem('fName').then((fName) => {
              if(fName){
                  setFname(fName.replace(/['"]+/g, ''));
              }
          });
      AsyncStorage.getItem('lName').then((lName) => {
              if(lName){
                  setLname(lName.replace(/['"]+/g, ''));
              }
          });

      });
        const { dark, sport, deep, theme, toggle, sportToggle, setSport} = useContext(ThemeContext);

  return (
    <Drawer.Navigator
        screenOptions={{
          drawerActiveTintColor: sport ? '#8027A1' : (dark ? '#313155' : '#4B123F'),
          headerShown: false,
          drawerType:'slide',
          drawerItemStyle: {marginVertical: 0, color: 'white', paddingVertical: "3%", transform: [{ translateX: "30%"}],},
          drawerLabelStyle: { color: 'white', fontSize: 18, transform: [{ translateX: -10}],},
        }}
        drawerContent={(props) => <CustomSidebarMenu {...props} firstName={fName} lastName={lName} nav={navigation}/> }
        initialRouteName={TabNavigator}>
      <Drawer.Screen
        name="TabNavigator"
        options={{
          headerShown:false,
          drawerLabel: 'Profile',
          drawerIcon: ({focused,size}) => {
                if (focused) {
                            return (
                    <Svg width="22" height="20" viewBox="0 0 24 32" fill="none" style={{transform: [{ translateX: 0 }],}}>
                        <Path
                            d="M20.4954 8.79108C20.4954 5.08605 17.5638 2.1397 13.844 2.10287C10.1905 2.06604 7.15582 5.08605 7.14845 8.75424C7.14109 12.4151 10.1537 15.4351 13.8219 15.4351C17.5196 15.4424 20.4954 12.4887 20.4954 8.79108Z"
                            fill={theme.activeTintColor}
                          />
                        <Path
                            d="M14.7583 17.4534C17.1817 17.122 19.1779 16.0318 20.6879 14.102C22.2126 12.1574 22.8092 9.92551 22.463 7.48741C21.8811 3.34043 18.5223 0.305699 14.2796 0.0184303C10.3536 -0.246741 6.59698 2.3755 5.47737 6.20575C4.71868 8.82063 5.05752 11.3029 6.58962 13.5642C8.10699 15.8108 10.2652 17.0557 12.939 17.4461C12.0256 17.5124 11.1638 17.667 10.3462 17.8733H17.3217C16.5041 17.667 15.6496 17.5197 14.7583 17.4534ZM7.14206 8.76171C7.14942 5.08614 10.1841 2.07351 13.8376 2.11034C17.5574 2.14716 20.489 5.09351 20.489 8.79854C20.489 12.4888 17.5132 15.4499 13.8082 15.4499C10.1473 15.4425 7.13469 12.4225 7.14206 8.76171Z"
                            fill={theme.activeTintColor}
                          />
                        <Path
                            d="M13.9345 19.5158C16.8146 19.5306 19.4073 20.4145 21.5729 22.337C24.394 24.834 25.5579 28.0823 25.6536 31.78C26.3386 31.78 26.9942 31.78 27.6497 31.78C27.8118 25.8799 24.0479 19.6263 17.3228 17.8806H10.3473C3.14352 19.7294 -0.281604 26.6092 0.0424943 31.7874C0.69069 31.7874 1.33151 31.7874 2.00917 31.7874C2.06809 28.4654 3.0183 25.4822 5.33855 23.0515C7.67353 20.5986 10.5904 19.4937 13.9345 19.5158Z"
                            fill={theme.activeTintColor}
                          />
                        <Path
                            d="M25.7996 31.7873C25.8144 31.5368 25.8291 31.2938 25.8291 31.036C25.8291 24.635 20.452 19.4495 13.8228 19.4495C7.19348 19.4495 1.81641 24.635 1.81641 31.036C1.81641 31.2864 1.83112 31.5368 1.84585 31.7873H25.7996Z"
                            fill={theme.activeTintColor}/>
                    </Svg>
                    );
                        } else {
                            return (
                    <Svg width="22" height="20" viewBox="0 0 24 32" fill="none" style={{transform: [{ translateX: 0 }],}}>
                        <Path
                            d="M14.9538 17.4462L14.0993 17.3799L13.2007 17.4462C4.28064 18.1312 0.479845 25.8285 0.627162 31.0436H1.88674C2.01933 27.5153 3.1389 24.6942 5.30447 22.4181C7.62471 19.98 10.5858 18.7352 14.173 18.772C17.2372 18.7868 19.8889 19.7664 22.0545 21.6889C24.6988 24.0313 26.0689 27.0955 26.2457 31.0436H27.5199C27.5052 24.7752 22.8794 18.0649 14.9538 17.4462Z"
                            fill={"white"}
                          />
                        <Path
                            d="M14.04 16.842L14.9312 16.7168C17.2883 16.3927 19.2034 15.3173 20.625 13.5053C22.0835 11.6417 22.658 9.51299 22.3266 7.17064C21.7741 3.23727 18.5479 0.290931 14.4819 0.0183942C14.3125 0.00366245 14.1357 0.00366211 13.9663 0.00366211C10.4086 0.00366211 7.07185 2.47859 6.06272 5.94791C5.32614 8.48914 5.6797 10.8609 7.12341 12.997C8.53765 15.0889 10.5853 16.3411 13.2223 16.7242L14.04 16.842ZM6.9982 8.39338C7.00557 6.50772 7.74951 4.73991 9.10483 3.39933C10.4454 2.07347 12.2206 1.33688 14.0694 1.36635C18.0028 1.40317 21.0891 4.5042 21.0891 8.42284C21.0891 10.3085 20.3598 12.0689 19.034 13.3948C17.7081 14.7133 15.9404 15.4425 14.0473 15.4425C12.1764 15.4425 10.4086 14.7059 9.06801 13.3653C7.72742 12.0247 6.9982 10.2569 6.9982 8.39338Z"
                            fill={"white"}
                          />
                    </Svg>
                  );
                }
            },
           }}
        component={TabNavigator}
      />


      <Drawer.Screen
        name="interestsScreenStack"
        options={{
                    headerShown:false,

          drawerLabel: 'Interests',
          drawerIcon: ({focused,size}) => {
          if(focused) {
            return(
              <Svg width="22" height="23" viewBox="0 0 27 23"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path
                  d="M13.2125 3.27756C13.6656 2.80665 14.1187 2.26467 14.6518 1.81154C16.1801 0.478792 17.9926 -0.160927 20.0095 0.0345424C22.906 0.327747 24.8607 1.95368 25.8291 4.65472C26.8065 7.40018 26.3178 9.95907 24.3276 12.1092C22.0708 14.5437 19.7252 16.8893 17.4151 19.2794C16.4022 20.3278 15.3804 21.3852 14.3675 22.4336C13.6389 23.1888 12.635 23.1888 11.9064 22.4336C8.62783 19.0484 5.34927 15.6632 2.0796 12.2692C-1.18119 8.89286 -0.51483 3.35752 3.4301 0.940801C5.72243 -0.463026 8.8766 -0.276443 11.1512 1.4117C11.5066 1.67825 11.8264 1.98924 12.1552 2.28244C12.4839 2.59342 12.8215 2.91327 13.2125 3.27756Z"
                  fill={theme.activeTintColor}
                />
              </Svg>
              );
          } else {
            return(
              <Svg width="22" height="23" viewBox="0 0 27 23" fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path
                  d="M13.0091 23C12.3742 23 11.7557 22.7279 11.2775 22.2249L8.70477 19.5615C6.51962 17.3021 4.33448 15.051 2.15758 12.7917C0.524904 11.1013 -0.23372 8.80067 0.0631302 6.4671C0.351734 4.18301 1.62985 2.18751 3.57586 1.00011C5.9754 -0.475888 9.29845 -0.277975 11.6568 1.47839C11.9289 1.68453 12.1845 1.90716 12.4319 2.13804L12.6463 2.33596C12.7864 2.45965 12.9184 2.58332 13.0586 2.70701C13.3142 2.42665 13.5863 2.14629 13.8914 1.88242C15.5158 0.472388 17.4536 -0.162533 19.4821 0.035367C22.4506 0.332217 24.5532 2.00611 25.5757 4.86741C26.5982 7.73696 26.054 10.4169 24.009 12.6267C22.5495 14.2017 21.024 15.7602 19.548 17.2691C18.8884 17.9453 18.2369 18.6132 17.5773 19.2894L14.7489 22.2166C14.2542 22.7279 13.644 23 13.0091 23ZM7.17928 1.6598C6.20627 1.6598 5.24152 1.90717 4.42518 2.41017C2.91619 3.3337 1.91844 4.89216 1.68756 6.6815C1.45668 8.51207 2.05862 10.3179 3.33672 11.6455C5.51362 13.9048 7.69877 16.156 9.88391 18.4153L12.4566 21.0787C12.5803 21.2024 12.77 21.3508 13.0008 21.3508C13.24 21.3508 13.4296 21.2024 13.5533 21.0787L16.3816 18.1514C17.033 17.4753 17.6927 16.7991 18.3524 16.123C19.8201 14.6222 21.3374 13.072 22.7804 11.5053C24.4048 9.7572 24.8171 7.71223 24.0008 5.41989C23.2009 3.16878 21.6177 1.90716 19.3007 1.67628C17.7092 1.51136 16.2414 2.00612 14.9551 3.12755C14.65 3.39142 14.3614 3.70477 14.081 4.00986C13.9409 4.15829 13.8089 4.29846 13.677 4.43864L13.1163 5.01585L12.1763 4.15003C11.9536 3.94388 11.7392 3.74598 11.5331 3.55633L11.3022 3.35018C11.096 3.16053 10.8817 2.96264 10.659 2.79772C9.64479 2.04735 8.39966 1.6598 7.17928 1.6598Z"
                  fill={"white"}
                />
              </Svg>
              );
            }
          },
        }}
        component={interestsScreenStack}
      />





      <Drawer.Screen
        name="friendsScreenStack"
        options={{
          drawerLabel: 'Friends',
          headerShown: false,
          drawerIcon: ({focused,size}) => {
          if(focused) {
            return(
              <Svg width="22" height="22" viewBox="0 0 31 22"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path d="M0.566406 21.0893C6.03924 21.0893 11.4384 21.0893 16.8597 21.0893C16.8597 19.8002 16.8744 18.5333 16.8523 17.2664C16.845 16.7802 16.8081 16.2941 16.7124 15.8153C16.1231 12.9352 13.5451 10.8139 10.6061 10.777C9.36125 10.7623 8.10904 10.7623 6.86421 10.777C6.45172 10.7844 6.0245 10.8286 5.61938 10.917C3.07079 11.4694 0.971523 13.6203 0.698986 16.1762C0.522206 17.7893 0.603236 19.4319 0.566406 21.0893ZM29.6542 21.0966C29.6542 20.5884 29.6616 20.1022 29.6542 19.6161C29.6321 18.6806 29.691 17.7304 29.5584 16.8023C29.227 14.4084 27.0319 12.4417 24.6159 12.3312C23.4963 12.2797 22.3693 12.287 21.2497 12.2944C19.8429 12.3018 18.5907 12.7585 17.5226 13.7013C17.3974 13.8118 17.309 13.9002 17.3974 14.0917C17.8983 15.1818 18.075 16.3309 18.0677 17.5242C18.0603 18.5554 18.0677 19.5866 18.0677 20.6178C18.0677 20.7725 18.0677 20.9272 18.0677 21.0966C21.9421 21.0966 25.7724 21.0966 29.6542 21.0966ZM9.00768 0.560597C6.52538 0.369085 4.38929 2.24 4.22724 4.80332C4.07992 7.18249 5.87718 9.407 8.53625 9.53959C10.8786 9.65007 13.0515 7.93381 13.2357 5.33366C13.4125 2.81454 11.4531 0.671085 9.00768 0.560597ZM26.5163 7.25616C26.5163 5.14216 24.8148 3.43328 22.7008 3.43328C20.5942 3.42591 18.8779 5.12742 18.8706 7.24879C18.8558 9.37016 20.5942 11.1085 22.7082 11.0938C24.8296 11.0717 26.5163 9.37017 26.5163 7.25616Z" fill={theme.activeTintColor} />
                <Path d="M30.2074 21.656H17.5234V19.6893C17.5234 18.9675 17.5234 18.2456 17.5234 17.5238C17.5308 16.301 17.3319 15.2551 16.9047 14.327C16.7279 13.944 16.8163 13.5978 17.1625 13.2884C18.3042 12.2719 19.6816 11.7489 21.2505 11.7416C22.5101 11.7342 23.556 11.7342 24.6462 11.7858C27.3421 11.911 29.7434 14.0839 30.1043 16.7356C30.2001 17.4354 30.2 18.1351 30.2 18.8128C30.2 19.078 30.2 19.3505 30.2074 19.6157C30.2148 19.9545 30.2148 20.2933 30.2074 20.6469V21.656ZM18.6283 20.5511H29.1099C29.1099 20.2418 29.1099 19.9398 29.1025 19.6378C29.0952 19.3652 29.0952 19.0853 29.0952 18.8128C29.0952 18.1425 29.0952 17.509 29.0141 16.8903C28.7269 14.791 26.7455 12.9938 24.5946 12.898C23.5339 12.8465 22.5027 12.8538 21.2579 12.8612C20.0057 12.8685 18.9008 13.2663 17.9874 14.0544C18.4294 15.0857 18.6356 16.2347 18.6283 17.5532C18.6209 18.2677 18.6209 18.9896 18.6283 19.7041V20.5511ZM17.4129 21.6413H0L0.0147461 21.0741C0.0294778 20.5659 0.0294697 20.0503 0.0294697 19.542C0.0294697 18.415 0.0294796 17.2512 0.154699 16.1095C0.449334 13.3473 2.65172 10.9829 5.50967 10.3715C5.95162 10.2758 6.40093 10.2242 6.85762 10.2168C8.14664 10.2021 9.41357 10.2021 10.6142 10.2168C13.8184 10.261 16.61 12.5665 17.2582 15.697C17.354 16.1537 17.3982 16.6546 17.4129 17.2512C17.4276 18.1572 17.4276 19.0632 17.4203 19.984L17.4129 21.6413ZM1.12698 20.5364H16.308V19.984C16.308 19.078 16.3154 18.172 16.3007 17.2733C16.2933 16.7504 16.2491 16.3158 16.1754 15.9254C15.6377 13.2958 13.288 11.3585 10.5995 11.3217C9.40622 11.307 8.15402 11.307 6.87236 11.3217C6.48934 11.3291 6.10631 11.3733 5.73801 11.4469C3.38094 11.9552 1.49528 13.9661 1.25221 16.2274C1.13435 17.3102 1.13435 18.3929 1.13435 19.542C1.12698 19.8808 1.12698 20.2123 1.12698 20.5364ZM22.6721 11.6384C21.5157 11.6384 20.4329 11.1891 19.6006 10.3642C18.7609 9.53182 18.3042 8.41956 18.3115 7.24102C18.3263 4.83239 20.2856 2.88044 22.6869 2.88044H22.6942C25.1029 2.88781 27.0622 4.8545 27.0622 7.25577C27.0622 9.69387 25.1471 11.6163 22.7016 11.6384C22.6942 11.6384 22.6869 11.6384 22.6721 11.6384ZM22.6942 3.98532C20.8969 3.98532 19.4312 5.45112 19.4238 7.24839C19.4164 8.12493 19.7626 8.95728 20.3887 9.58338C21.0148 10.2021 21.8103 10.5188 22.7016 10.5336C24.5357 10.5188 25.9647 9.0825 25.9647 7.25577C25.9647 5.4585 24.4989 3.98532 22.7016 3.98532H22.6942ZM8.75802 10.099C8.677
                      10.099 8.59597 10.099 8.50758 10.0916C7.11544 10.0253 5.85586 9.42869 4.94986 8.41956C4.05859 7.42517 3.59454 6.09197 3.68293 4.77348C3.77132 3.37396 4.39006 2.11439 5.41391 1.21575C6.42304 0.339215 7.71206 -0.0880082 9.04528 0.0151138C10.3638 0.0740407 11.6233 0.685422 12.522 1.68718C13.4353 2.71103 13.8847 4.02214 13.7889 5.37746C13.59 8.066 11.4097 10.099 8.75802 10.099ZM8.66963 1.0979C7.73417 1.0979 6.8429 1.42937 6.13578 2.0481C5.3329 2.74786 4.84675 3.74225 4.78046 4.83977C4.71417 5.87099 5.07508 6.9022 5.77483 7.68298C6.48196 8.47113 7.47635 8.93519 8.5665 8.98675C10.7247 9.08251 12.5293 7.46937 12.684 5.28907C12.7577 4.22839 12.4115 3.20453 11.697 2.40902C10.9972 1.62824 10.0102 1.14946 8.99373 1.10527H8.97899C8.8685 1.10527 8.76539 1.0979 8.66963 1.0979Z" fill={theme.activeTintColor} />
                <Path d="M0.566406 21.0881C0.603236 19.4308 0.529572 17.7882 0.698986 16.1751C0.971523 13.6191 3.07079 11.4683 5.61938 10.9159C6.0245 10.8275 6.44436 10.7833 6.86421 10.7759C8.10904 10.7612 9.36125 10.7538 10.6061 10.7759C13.5524 10.8127 16.1231 12.9341 16.7124 15.8142C16.8081 16.2856 16.845 16.7791 16.8523 17.2652C16.8744 18.5322 16.8597 19.7991 16.8597 21.0881C11.4384 21.0881 6.03924 21.0881 0.566406 21.0881Z" fill={theme.activeTintColor} />
                <Path d="M17.4129 21.6413H0L0.0147461 21.0741C0.0294778 20.5659 0.0294697 20.0503 0.0294697 19.542C0.0294697 18.4151 0.0294796 17.2513 0.154699 16.1095C0.449334 13.3474 2.65172 10.9829 5.50967 10.3715C5.95162 10.2758 6.40093 10.2242 6.85762 10.2169C8.14664 10.2021 9.41357 10.2021 10.6142 10.2169C13.8184 10.2611 16.61 12.5666 17.2582 15.6971C17.354 16.1537 17.3982 16.6546 17.4129 17.2513C17.4276 18.1573 17.4276 19.0633 17.4203 19.984L17.4129 21.6413ZM1.12698 20.5364H16.308V19.984C16.308 19.078 16.3154 18.172 16.3007 17.2734C16.2933 16.7504 16.2491 16.3158 16.1754 15.9254C15.6377 13.2958 13.288 11.3586 10.5995 11.3217C9.40622 11.307 8.15402 11.307 6.87236 11.3217C6.48934 11.3291 6.10631 11.3733 5.73801 11.447C3.38094 11.9552 1.49528 13.9661 1.25221 16.2274C1.13435 17.3102 1.13435 18.393 1.13435 19.542C1.12698 19.8809 1.12698 20.2123 1.12698 20.5364Z" fill={theme.activeTintColor} />
                <Path d="M29.6563 21.0957C25.7745 21.0957 21.9442 21.0957 18.0771 21.0957C18.0771 20.9263 18.0771 20.7716 18.0771 20.617C18.0771 19.5857 18.0698 18.5545 18.0771 17.5233C18.0845 16.33 17.9077 15.181 17.4068 14.0908C17.3184 13.8993 17.4068 13.8109 17.5321 13.7004C18.5927 12.7576 19.8449 12.3009 21.2592 12.2935C22.3788 12.2862 23.5058 12.2788 24.6254 12.3304C27.0414 12.4408 29.2364 14.4075 29.5679 16.8014C29.6931 17.7222 29.6415 18.6724 29.6636 19.6152C29.671 20.1087 29.6563 20.5875 29.6563 21.0957Z" fill={theme.activeTintColor} />
                <Path d="M30.2078 21.6555H17.5238V19.6888C17.5238 18.967 17.5238 18.2451 17.5238 17.5232C17.5312 16.3005 17.3323 15.2546 16.9051 14.3265C16.7283 13.9434 16.8167 13.5972 17.1629 13.2879C18.3046 12.2714 19.682 11.7484 21.2509 11.741C22.5105 11.7337 23.5565 11.7337 24.6466 11.7852C27.3425 11.9104 29.7438 14.0834 30.1047 16.7351C30.2005 17.4348 30.2004 18.1346 30.2004 18.8123C30.2004 19.0774 30.2004 19.35 30.2078 19.6151C30.2152 19.954 30.2152 20.2928 30.2078 20.6464V21.6555ZM18.6287 20.5506H29.1103C29.1103 20.2412 29.1103 19.9392 29.1029 19.6372C29.0956 19.3647 29.0956 19.0848 29.0956 18.8123C29.0956 18.142 29.0956 17.5085 29.0145 16.8898C28.7273 14.7905 26.7459 12.9932 24.595 12.8975C23.5343 12.8459 22.5031 12.8533 21.2583 12.8606C20.0061 12.868 18.9012 13.2658 17.9879 14.0539C18.4298 15.0851 18.636 16.2342 18.6287 17.5527C18.6213 18.2672 18.6213 18.989 18.6287 19.7035V20.5506Z" fill={theme.activeTintColor} />
                <Path d="M9.00718 0.560153C11.4453 0.663275 13.4046 2.81409 13.2278 5.33322C13.0437 7.93337 10.8707 9.64963 8.5284 9.53914C5.86932 9.41392 4.07205 7.18205 4.21937 4.80287C4.38878 2.23955 6.53225 0.376006 9.00718 0.560153Z" fill={theme.activeTintColor} />
                <Path d="M8.75764 10.099C8.67661 10.099 8.59559 10.099 8.5072 10.0916C7.11505 10.0253 5.85548 9.42869 4.94948 8.41956C4.05821 7.42517 3.59416 6.09197 3.68255 4.77348C3.77094 3.37396 4.38967 2.11439 5.41353 1.21575C6.42265 0.339215 7.71167 -0.0880082 9.04489 0.0151138C10.3634 0.0740407 11.6229 0.685422 12.5216 1.68718C13.4349 2.71103 13.8843 4.02214 13.7885 5.37746C13.5896 8.066 11.4093 10.099 8.75764 10.099ZM8.66925 1.0979C7.73379 1.0979 6.84251 1.42937 6.13539 2.0481C5.33251 2.74786 4.84637 3.74225 4.78008 4.83977C4.71378 5.87099 5.07469 6.9022 5.77445 7.68298C6.48157 8.47113 7.47597 8.93519 8.56612 8.98675C10.7243 9.08251 12.5289 7.46937 12.6836 5.28907C12.7573 4.22839 12.4111 3.20453 11.6966 2.40902C10.9969 1.62824 10.0098 1.14946 8.99335 1.10527H8.9786C8.86812 1.10527 8.76501 1.0979 8.66925 1.0979Z" fill={theme.activeTintColor} />
                <Path d="M26.5165 7.25531C26.5165 9.36931 24.8297 11.0634 22.701 11.0855C20.587 11.1003 18.8486 9.36193 18.8634 7.24056C18.8781 5.12656 20.587 3.42505 22.6936 3.42505C24.815 3.43978 26.5165 5.14867 26.5165 7.25531Z" fill={theme.activeTintColor} />
                <Path d="M22.6693 11.6381C21.5128 11.6381 20.43 11.1888 19.5977 10.3638C18.758 9.5315 18.3013 8.41924 18.3087 7.2407C18.3234 4.83207 20.2827 2.88013 22.684 2.88013H22.6914C25.1 2.88749 27.0593 4.85418 27.0593 7.25545C27.0593 9.69355 25.1442 11.616 22.6987 11.6381C22.6914 11.6381 22.684 11.6381 22.6693 11.6381ZM22.6914 3.98501C20.8941 3.98501 19.4283 5.45081 19.4209 7.24808C19.4136 8.12462 19.7598 8.95697 20.3859 9.58307C21.012 10.2018 21.8075 10.5185 22.6987 10.5332C24.5328 10.5185 25.9618 9.08218 25.9618 7.25545C25.9618 5.45818 24.496 3.98501 22.6987 3.98501C22.6987 3.98501 22.6914 3.98501 22.6914 3.98501Z" fill={theme.activeTintColor} />
              </Svg>
              );
          } else {
            return(
              <Svg width="22" height="22" viewBox="0 0 31 22"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path
                  d="M5.7855 9.97091C4.23776 8.75534 3.42502 7.22172 3.48156 5.29236C3.52396 3.73756 4.16001 2.43718 5.31198 1.39123C7.51697 -0.615879 10.9729 -0.425058 13.0224 1.79407C15.0366 3.97079 15.0648 7.73765 12.1602 9.96384C14.0259 10.3949 15.4818 11.3985 16.6267 12.925C17.4324 12.2466 18.3299 11.7236 19.4607 11.4692C17.9907 10.2748 17.3617 8.77653 17.5737 6.97437C17.7221 5.7164 18.3158 4.66338 19.3123 3.86477C21.3264 2.25344 24.1816 2.46546 25.8778 4.26761C27.6446 6.14044 27.8071 9.44086 25.3265 11.448C25.4255 11.4833 25.5103 11.5186 25.5951 11.5469C28.3866 12.3879 30.21 14.8332 30.21 17.7449C30.21 18.9534 30.21 20.1619 30.21 21.3634C30.21 21.8157 30.0121 22.0206 29.5739 22.0559C29.4962 22.063 29.4185 22.0559 29.3478 22.0559C19.8635 22.0559 10.3792 22.0559 0.894931 22.0559C0.76772 22.0559 0.63345 22.0489 0.506239 22.0277C0.181144 21.9711 0.0044538 21.7591 0.0115211 21.4411C0.0185884 19.7803 -0.045005 18.1124 0.0680714 16.4516C0.223551 14.1618 1.34723 12.3667 3.2342 11.0522C3.97626 10.5434 4.81021 10.1971 5.7855 9.97091ZM1.12109 20.8828C6.37207 20.8828 11.5524 20.8828 16.7539 20.8828C16.7539 19.646 16.768 18.4304 16.7468 17.2149C16.7398 16.7484 16.7044 16.282 16.6126 15.8226C16.0472 13.0593 13.5736 11.0239 10.7538 10.9886C9.55942 10.9744 8.35799 10.9744 7.16362 10.9886C6.76786 10.9956 6.35795 11.0381 5.96925 11.1229C3.52397 11.6529 1.50978 13.7166 1.24829 16.1689C1.08575 17.7237 1.15642 19.2926 1.12109 20.8828ZM29.0368 20.8969C29.0368 20.4093 29.0439 19.9428 29.0368 19.4764C29.0156 18.5788 29.0722 17.6672 28.945 16.7767C28.6269 14.4798 26.5209 12.5929 24.2028 12.4869C23.1286 12.4374 22.0473 12.4444 20.9731 12.4515C19.6232 12.4586 18.4218 12.8968 17.397 13.8014C17.2769 13.9074 17.1921 13.9922 17.2769 14.1759C17.7575 15.2219 17.9271 16.3244 17.92 17.4693C17.913 18.4587 17.92 19.4481 17.92 20.4375C17.92 20.586 17.92 20.7344 17.92 20.8969C21.6374 20.8969 25.3124 20.8969 29.0368 20.8969ZM9.22726 1.19334C6.84558 1.0096 4.79608 2.80469 4.6406 5.2641C4.49925 7.54683 6.22367 9.68115 8.77496 9.80836C11.0224 9.91437 13.1072 8.2677 13.2839 5.77295C13.4535 3.35594 11.5665 1.29229 9.22726 1.19334ZM26.0262 7.6175C26.0262 5.58919 24.3936 3.94958 22.3653 3.94958C20.3441 3.94251 18.6974 5.57505 18.6903 7.61042C18.6762 9.6458 20.3441 11.3137 22.3724 11.2995C24.4078 11.2713 26.0262 9.64581 26.0262 7.6175Z"
                  fill={"white"}
                />
              </Svg>
              );
            }
          },
        }}
        component={friendsScreenStack}
      />







      <Drawer.Screen
        name="notificationScreenStack"
        options={{
          drawerLabel: 'Notifications',
          headerShown: false,
          drawerIcon: ({focused,size}) => {
          if(focused) {
            return(
              <Svg width="22" height="22" viewBox="0 0 22 22"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path d="M9.02998 1.33862C9.0782 0.458592 9.53629 -0.017586 10.2958 0.000496725C10.9829 0.0185794 11.4289 0.536951 11.435 1.32053C11.7002 1.423 11.9775 1.50739 12.2366 1.62794C13.8581 2.41756 14.7863 3.71347 15.0153 5.49763C15.0756 5.99189 15.0515 6.49218 15.1058 6.99247C15.2806 8.54155 15.8532 9.93993 16.7754 11.1997C17.2455 11.8386 17.8242 12.3751 18.4149 12.8995C19.0357 13.46 19.6626 14.0146 20.2774 14.5812C21.1755 15.4069 21.2418 16.8294 20.4462 17.7577C19.9338 18.3544 19.2708 18.6076 18.4933 18.6016C16.8116 18.5955 15.1359 18.6016 13.4542 18.6016C13.3758 18.6016 13.2975 18.6016 13.2191 18.6016C13.1287 20.5906 11.5796 21.6153 10.2114 21.6033C8.65023 21.5852 7.28802 20.44 7.19158 18.6016C7.11322 18.6016 7.03485 18.6016 6.95649 18.6016C5.47974 18.6016 4.00299 18.6016 2.52623 18.6016C2.08622 18.6016 1.65828 18.5413 1.26046 18.3243C-0.00532597 17.6432 -0.391099 16.0278 0.440704 14.8524C0.513034 14.756 0.60345 14.6716 0.687836 14.5872C1.53772 13.7433 2.42377 12.9236 3.23147 12.0436C4.36465 10.8139 5.03974 9.34321 5.30495 7.69768C5.39536 7.14918 5.42549 6.58259 5.42549 6.02806C5.43754 3.87019 6.80581 2.01972 8.87929 1.38683C8.93353 1.37477 8.98175 1.3567 9.02998 1.33862ZM10.5308 17.4021C13.195 17.4021 15.8592 17.4021 18.5173 17.4021C18.656 17.4021 18.8006 17.396 18.9393 17.3659C19.4034 17.2574 19.6927 16.95 19.8073 16.4979C19.9157 16.076 19.8012 15.7023 19.4637 15.4069C18.9815 14.985 18.4993 14.5631 18.0171 14.1411C17.3239 13.5324 16.6126 12.9417 16.034 12.2123C14.8888 10.7778 14.1775 9.15033 13.9304 7.33001C13.8581 6.76945 13.8641 6.20286 13.8098 5.63627C13.6169 3.56279 11.652 2.07398 9.61465 2.44768C7.8546 2.77317 6.6491 4.23184 6.62499 6.02202C6.61896 6.673 6.57676 7.33001 6.46826 7.96893C6.15483 9.81336 5.39537 11.4649 4.12355 12.8452C3.3038 13.7373 2.41171 14.5631 1.54977 15.419C1.25442 15.7083 1.16402 16.0639 1.24238 16.4557C1.36293 17.0585 1.82704 17.4021 2.4961 17.4021C5.17837 17.4021 7.8546 17.4021 10.5308 17.4021ZM12.0136 18.6257C10.8141 18.6257 9.6267 18.6257 8.43927 18.6257C8.42721 19.6624 9.32533 20.4701 10.3862 20.4038C11.3084 20.3375 12.1281 19.4454 12.0136 18.6257Z" fill={theme.activeTintColor} />
                <Path d="M10.5319 17.4019C7.85571 17.4019 5.17948 17.4019 2.50325 17.4019C1.83419 17.4019 1.37006 17.0584 1.2495 16.4556C1.17115 16.0638 1.26157 15.7082 1.55692 15.4189C2.41886 14.569 3.31093 13.7372 4.13068 12.8451C5.40249 11.4648 6.16197 9.81324 6.47541 7.96881C6.5839 7.32989 6.62006 6.67288 6.63211 6.0219C6.65622 4.23171 7.86175 2.76702 9.62179 2.44756C11.6591 2.07385 13.6241 3.56869 13.817 5.63615C13.8712 6.19671 13.8592 6.76933 13.9375 7.32989C14.1847 9.15021 14.8959 10.7777 16.0411 12.2122C16.6198 12.9416 17.331 13.5262 18.0242 14.141C18.5064 14.563 18.9826 14.9849 19.4708 15.4068C19.8084 15.7022 19.9169 16.0759 19.8144 16.4978C19.6999 16.9499 19.4106 17.2512 18.9464 17.3658C18.8078 17.3959 18.6631 17.4019 18.5245 17.4019C15.8603 17.4019 13.1961 17.4019 10.5319 17.4019Z" fill={theme.activeTintColor} />
                <Path d="M12.012 18.6255C12.1265 19.4452 11.3067 20.3373 10.3845 20.4036C9.32368 20.476 8.42556 19.6622 8.43762 18.6255C9.62505 18.6255 10.8125 18.6255 12.012 18.6255Z" fill={theme.activeTintColor} />
              </Svg>
              );
          } else {
            return(
              <Svg width="22" height="22" viewBox="0 0 22 22"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path
                  d="M9.19576 1.36319C9.24487 0.467011 9.71138 -0.0179088 10.4848 0.000505845C11.1845 0.0189205 11.6388 0.546809 11.6449 1.34478C11.915 1.44913 12.1974 1.53507 12.4613 1.65783C14.1125 2.46194 15.0578 3.78165 15.291 5.59856C15.3524 6.1019 15.3279 6.61137 15.3831 7.12085C15.5611 8.69837 16.1442 10.1224 17.0834 11.4053C17.5622 12.056 18.1514 12.6023 18.753 13.1363C19.3852 13.7072 20.0236 14.2719 20.6497 14.8489C21.5643 15.6898 21.6318 17.1384 20.8216 18.0837C20.2998 18.6914 19.6246 18.9492 18.8328 18.9431C17.1202 18.9369 15.4138 18.9431 13.7012 18.9431C13.6214 18.9431 13.5416 18.9431 13.4618 18.9431C13.3698 20.9687 11.7922 22.0122 10.3989 21.9999C8.80907 21.9815 7.42182 20.8152 7.32361 18.9431C7.24381 18.9431 7.16401 18.9431 7.08421 18.9431C5.58035 18.9431 4.0765 18.9431 2.57263 18.9431C2.12454 18.9431 1.68873 18.8817 1.2836 18.6607C-0.00542375 17.9671 -0.39828 16.322 0.448795 15.1251C0.522454 15.0269 0.614529 14.9409 0.700464 14.855C1.56595 13.9957 2.46827 13.1609 3.29079 12.2647C4.44478 11.0125 5.13226 9.51476 5.40234 7.83903C5.49442 7.28045 5.52512 6.70344 5.52512 6.13873C5.53739 3.94124 6.93076 2.05682 9.04231 1.41231C9.10369 1.40003 9.15279 1.38161 9.19576 1.36319ZM10.7303 17.7277C13.4434 17.7277 16.1565 17.7277 18.8635 17.7277C19.0046 17.7277 19.152 17.7216 19.2931 17.6909C19.7658 17.5804 20.0604 17.2673 20.177 16.807C20.2875 16.3773 20.1709 15.9967 19.8272 15.6959C19.3361 15.2663 18.8451 14.8366 18.354 14.4069C17.6481 13.787 16.9238 13.1854 16.3345 12.4427C15.1683 10.9818 14.444 9.32447 14.1923 7.47073C14.1186 6.89988 14.1248 6.32288 14.0695 5.74589C13.8731 3.63434 11.872 2.1182 9.79731 2.49877C8.00495 2.83023 6.77731 4.31568 6.75276 6.13873C6.74662 6.80166 6.70365 7.47073 6.59316 8.12138C6.27397 9.99968 5.50055 11.6815 4.20538 13.0872C3.37059 13.9957 2.46214 14.8366 1.58437 15.7082C1.2836 16.0028 1.19152 16.365 1.27131 16.764C1.39408 17.3778 1.86673 17.7277 2.54808 17.7277C5.27958 17.7277 8.00495 17.7277 10.7303 17.7277ZM12.2403 18.9676C11.0188 18.9676 9.80958 18.9676 8.60035 18.9676C8.58808 20.0234 9.50268 20.8459 10.583 20.7784C11.516 20.717 12.3508 19.8024 12.2403 18.9676Z"
                  fill={"white"}
                />
              </Svg>
              );
            }
          },
        }}
        component={notificationScreenStack}
      />

      <Drawer.Screen
        name="Settings"
        options={{
          drawerLabel: 'Settings',
          headerShown: false,
           drawerIcon: ({focused,size}) => {
          if(focused) {
            return(
              <Svg width="22" height="22" viewBox="0 0 22 22"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path d="M9.80855 14.9708C7.33362 14.9487 5.41114 12.9451 5.47007 10.5365C5.529 8.0763 7.5988 6.16855 10.0958 6.3085C12.3571 6.43372 14.3165 8.3783 14.1839 10.8753C14.0587 13.1366 12.173 14.9781 9.80855 14.9708ZM6.72225 10.6323C6.72225 12.3338 8.09231 13.6965 9.81592 13.7112C11.5322 13.7259 12.939 12.3485 12.939 10.6396C12.939 8.95285 11.5469 7.55334 9.84539 7.55334C8.12915 7.54597 6.72225 8.93075 6.72225 10.6323Z" fill={theme.activeTintColor} />
                <Path d="M19.1363 13.4382C18.8417 13.1362 18.5397 12.8416 18.2524 12.5322C18.1861 12.4586 18.1419 12.326 18.1566 12.2376C18.3629 11.1769 18.3629 10.1162 18.1566 9.05552C18.1419 8.96713 18.1787 8.84193 18.245 8.77564C18.5249 8.47364 18.8269 8.17899 19.1142 7.88435C19.7182 7.25825 19.8066 6.54378 19.3794 5.7851C19.1879 5.44627 18.9963 5.11479 18.8048 4.77596C18.5028 4.24562 17.8178 3.89944 17.2138 4.00992C16.7056 4.10568 16.2121 4.23825 15.7112 4.36347C15.5933 4.39293 15.5049 4.39294 15.4018 4.30455C14.5621 3.59743 13.634 3.04499 12.588 2.69143C12.507 2.66197 12.4186 2.55884 12.3965 2.47781C12.264 2.07269 12.1535 1.65284 12.0356 1.24035C11.8588 0.614255 11.4463 0.187045 10.8129 0.076557C10.2899 -0.0118333 9.74482 -0.0118459 9.20711 0.0176176C8.33057 0.0691786 7.85916 0.481666 7.61608 1.32874C7.50559 1.7044 7.39511 2.08006 7.29936 2.46309C7.26253 2.59567 7.2036 2.66196 7.07102 2.70615C6.0177 3.05235 5.07486 3.59744 4.23515 4.31193C4.17623 4.36349 4.05102 4.3782 3.96999 4.36347C3.55014 4.26771 3.13765 4.15724 2.72516 4.05412C1.96648 3.86261 1.22989 4.16461 0.83213 4.84227C0.647983 5.15164 0.463844 5.45364 0.287063 5.763C-0.132791 6.48486 -0.0517763 7.22144 0.530127 7.82544C0.824761 8.12744 1.12677 8.42943 1.41404 8.7388C1.47297 8.79772 1.50978 8.91557 1.49505 8.98923C1.29617 10.072 1.28881 11.1548 1.49505 12.2376C1.50978 12.3186 1.47297 12.4291 1.41404 12.488C1.12677 12.79 0.824768 13.0773 0.5375 13.3719C-0.0738667 13.998 -0.162253 14.6904 0.264967 15.4491C0.456479 15.7879 0.655341 16.1341 0.846853 16.4729C1.15622 17.0033 1.87072 17.3569 2.47473 17.2464C2.96824 17.1506 3.447 17.0328 3.93315 16.9075C4.05837 16.8781 4.13941 16.8854 4.24253 16.9738C5.07487 17.6809 5.99559 18.2334 7.04155 18.5649C7.16677 18.6017 7.2257 18.6753 7.25516 18.8006C7.37302 19.2425 7.49088 19.6845 7.63083 20.1191C7.83707 20.7452 8.27164 21.1503 8.9272 21.2239C9.50174 21.2902 10.091 21.2902 10.6656 21.2313C11.38 21.1577 11.8441 20.7231 12.0356 20.0233C12.1461 19.6329 12.2639 19.2425 12.3597 18.8448C12.3965 18.6901 12.4776 18.6238 12.6175 18.5796C13.4719 18.3071 14.2454 17.8798 14.9598 17.3495C15.1661 17.2022 15.3502 16.9665 15.5786 16.9223C15.8069
                      16.8781 16.0721 17.0328 16.3225 17.0843C16.7056 17.1727 17.0886 17.2464 17.3243 17.2979C18.1125 17.239 18.5838 16.937 18.8932 16.3846C19.0553 16.0973 19.2247 15.8174 19.3867 15.5301C19.8287 14.7714 19.7477 14.0643 19.1363 13.4382ZM9.81112 14.963C7.33619 14.9409 5.41369 12.9373 5.47261 10.5287C5.49471 9.60796 5.79671 8.7609 6.30496 8.07587C7.14467 6.93416 8.53683 6.21968 10.091 6.30807C12.3523 6.43329 14.3117 8.37786 14.1791 10.8749C14.1349 11.722 13.8402 12.5101 13.3688 13.1657C12.5733 14.2485 11.2843 14.963 9.81112 14.963Z" fill={theme.activeTintColor} />
                <Path d="M9.81248 14.9708C7.33755 14.9487 5.41505 12.9451 5.47398 10.5365C5.5329 8.0763 7.60273 6.16855 10.0998 6.3085C12.3611 6.43372 14.3204 8.3783 14.1878 10.8753C14.07 13.1366 12.1769 14.9781 9.81248 14.9708ZM6.72618 10.6323C6.72618 12.3338 8.09624 13.6965 9.81985 13.7112C11.5361 13.7259 12.943 12.3485 12.943 10.6396C12.943 8.95285 11.5508 7.55334 9.8493 7.55334C8.14042 7.54597 6.73355 8.93075 6.72618 10.6323Z" fill={theme.activeTintColor} />
              </Svg>
              );
          } else {
            return(
              <Svg width="22" height="24" viewBox="0 0 22 24"fill="none" style={{ transform: [{translateX: 0}] }}>
                <Path d="M17.3243 17.2979C17.0812 17.2464 16.6982 17.1727 16.3226 17.0843C16.0721 17.0254 15.8069 16.8781 15.5786 16.9223C15.3503 16.9665 15.1661 17.2022 14.9599 17.3495C14.238 17.8798 13.4646 18.3071 12.6175 18.5796C12.4776 18.6238 12.3966 18.6901 12.3597 18.8448C12.264 19.2425 12.1461 19.6329 12.0356 20.0233C11.8367 20.7231 11.38 21.165 10.6656 21.2313C10.091 21.2902 9.50177 21.2829 8.92723 21.2239C8.27903 21.1503 7.83707 20.7452 7.63083 20.1191C7.49088 19.6845 7.37304 19.2425 7.25519 18.8006C7.22572 18.6753 7.16679 18.609 7.04157 18.5649C5.99562 18.226 5.07487 17.6809 4.24253 16.9738C4.13941 16.8854 4.05839 16.8781 3.93317 16.9075C3.44703 17.0328 2.96087 17.1506 2.47473 17.2464C1.87072 17.3642 1.14888 17.0107 0.846876 16.473C0.647998 16.1341 0.456479 15.7879 0.264967 15.4491C-0.162253 14.6904 -0.0738667 13.998 0.5375 13.3719C0.824769 13.0773 1.12677 12.79 1.41404 12.488C1.47297 12.4291 1.50981 12.3112 1.49508 12.2376C1.28883 11.1548 1.2962 10.072 1.49508 8.98923C1.50981 8.90821 1.47297 8.79772 1.41404 8.7388C1.12677 8.42943 0.824784 8.12744 0.530149 7.82544C-0.0517538 7.22144 -0.140157 6.48484 0.287063 5.76298C0.463844 5.45361 0.655372 5.15161 0.832152 4.84225C1.22991 4.16459 1.96648 3.86261 2.72516 4.05412C3.13765 4.15724 3.55751 4.26772 3.96999 4.36347C4.05102 4.3782 4.17625 4.36349 4.23518 4.31193C5.08225 3.59744 6.01772 3.05235 7.07104 2.70615C7.20362 2.66196 7.26255 2.59567 7.29938 2.46309C7.4025 2.08006 7.51298 1.7044 7.61611 1.32874C7.85918 0.481666 8.3306 0.0691786 9.20713 0.0176176C9.73748 -0.0118459 10.2899 -0.0118333 10.8129 0.076557C11.4464 0.187045 11.8515 0.614255 12.0356 1.24035C12.1535 1.65284 12.264 2.06532 12.3965 2.47781C12.426 2.5662 12.507 2.66197 12.5881 2.69143C13.634 3.04499 14.5621 3.59743 15.4018 4.30455C15.5049 4.39294 15.5933 4.39294 15.7112 4.36347C16.2121 4.24562 16.7056 4.10568 17.2138 4.00992C17.8178 3.89944 18.4955 4.24562 18.8049 4.77596C18.9964 5.10742 19.1879 5.44627 19.3794 5.7851C19.8066 6.54378 19.7182 7.25826 19.1142 7.88435C18.8269 8.18635 18.5249 8.47364 18.245 8.77564C18.1861 8.84193 18.1419 8.96713 18.1567 9.05552C18.3629 10.1162 18.3629 11.1769 18.1567 12.2376C18.1419
                      12.326 18.1861 12.4659 18.2524 12.5322C18.5397 12.8416 18.8417 13.1362 19.1363 13.4382C19.7477 14.0717 19.8361 14.7714 19.3941 15.5301C19.2321 15.8174 19.0627 16.0973 18.9006 16.3846C18.5765 16.937 18.1125 17.239 17.3243 17.2979ZM2.24639 5.19582C2.15799 5.26211 2.00333 5.33577 1.91494 5.45363C1.71606 5.73353 1.554 6.03553 1.37722 6.33017C1.20044 6.6248 1.21516 6.74265 1.45823 6.99309C1.89282 7.44241 2.32004 7.89173 2.76936 8.33368C2.87984 8.44417 2.89458 8.54728 2.86512 8.68723C2.76936 9.18811 2.66624 9.68162 2.61468 10.1825C2.53365 10.9927 2.65887 11.7956 2.88721 12.5764C2.92404 12.7016 2.90195 12.79 2.8062 12.8784C2.34951 13.3277 1.89282 13.7844 1.43614 14.2485C1.22989 14.4547 1.21517 14.5947 1.35512 14.8451C1.52454 15.1471 1.70131 15.4565 1.87809 15.7585C2.01804 15.9942 2.16536 16.0605 2.43053 15.9942C3.05663 15.8395 3.67537 15.6848 4.30147 15.5301C4.43405 15.4933 4.52981 15.5154 4.62557 15.6185C5.57576 16.6129 6.71747 17.2685 8.05069 17.5926C8.17591 17.622 8.2201 17.681 8.24956 17.7988C8.41161 18.4028 8.58839 19.0068 8.7578 19.6108C8.83883 19.9055 8.97143 20.0159 9.2808 20.0159C9.62699 20.0159 9.96582 20.0159 10.312 20.0159C10.614 20.0159 10.7392 19.9128 10.8203 19.6255C10.9897 19.0142 11.1591 18.4028 11.3211 17.7841C11.3506 17.6589 11.4022 17.5926 11.5347 17.5631C12.868 17.2316 14.0391 16.5982 14.9967 15.6038C15.0998 15.5007 15.1882 15.4933 15.3208 15.5227C15.9395 15.6848 16.5656 15.8321 17.1917 15.9942C17.479 16.0678 17.6116 16.0089 17.7663 15.7511C17.9283 15.4712 18.0904 15.1987 18.2524 14.9188C18.4366 14.602 18.4218 14.4989 18.1714 14.2411C17.7221 13.7844 17.2728 13.3351 16.8234 12.8858C16.7424 12.8048 16.7203 12.7311 16.7424 12.6059C16.8455 12.0755 16.956 11.5378 17.0076 11.0001C17.0739 10.2341 16.9781 9.46803 16.7571 8.73145C16.7056 8.56203 16.7498 8.45889 16.875 8.34103C17.317 7.91381 17.7515 7.47187 18.1861 7.03728C18.3924 6.83104 18.4071 6.69109 18.2671 6.44065C18.0977 6.13865 17.9209 5.82929 17.7442 5.52729C17.6042 5.29158 17.4495 5.22528 17.1844 5.29158C16.5583 5.44626 15.9322 5.59357 15.3134 5.76298C15.1735 5.79981 15.0924 5.77035 14.9967 5.67459C14.0539 4.68757 12.9195 4.03202 11.5863 3.70792C11.4611
                      3.67846 11.4022 3.62689 11.3653 3.49431C11.1959 2.87557 11.0191 2.25685 10.8424 1.63812C10.7687 1.38768 10.6361 1.28454 10.3783 1.27717C10.0174 1.26981 9.66382 1.26981 9.30289 1.27717C9.03036 1.27717 8.91985 1.37295 8.84619 1.63812C8.66941 2.24948 8.50001 2.86084 8.3306 3.47221C8.29377 3.61216 8.22748 3.67844 8.08016 3.71527C6.73957 4.03937 5.58312 4.69493 4.61819 5.67459C4.53717 5.75562 4.47087 5.78509 4.36038 5.74826C4.10995 5.6746 3.85216 5.60831 3.59435 5.54201C3.15977 5.43153 2.7399 5.3284 2.24639 5.19582Z" fill={"white"} />
                <Path d="M9.78902 14.9698C7.31409 14.9477 5.39161 12.9442 5.45054 10.5355C5.50946 8.07533 7.57927 6.16758 10.0763 6.30753C12.3376 6.43275 14.2969 8.37732 14.1643 10.8743C14.0465 13.1283 12.1535 14.9698 9.78902 14.9698ZM6.71009 10.6313C6.71009 12.3328 8.08015 13.6955 9.80377 13.7102C11.52 13.7249 12.9269 12.3475 12.9269 10.6387C12.9269 8.95188 11.5347 7.55236 9.83323 7.55236C8.11699 7.53763 6.71009 8.92977 6.71009 10.6313Z" fill={"white"}/>
              </Svg>
              );
            }
          },
        }}
        component={settingScreenStack}
      />
     </Drawer.Navigator>
  );
};


/* Switch Navigator for those screens which needs to be switched only once
  and we don't want to switch back once we switch from them to the next one */

const App = () => {

  return (
    <ThemeProvider>
    <NavigationContainer >
      <Stack.Navigator initialRouteName="SplashScreen">
        {/* SplashScreen which will come once for 5 Seconds */}
        <Stack.Screen
          name="SplashScreen"
          component={SplashScreen}
          options={{ headerShown: false }}
        />
        {/* Auth Navigator which includer Login Signup will come once */}
        <Stack.Screen
          name="Auth"
          component={Auth}
          options={{ headerShown: false }}
        />
        {/* Navigation Drawer as a landing page */}
        <Stack.Screen
          name="drawerRoot"
          component={drawerRoot}
          options={{ headerShown: false }}
        />

      </Stack.Navigator>
    </NavigationContainer>
    </ThemeProvider>
  );
};

export default App;